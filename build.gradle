System.setProperty("user.dir", projectDir.toString())

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }
    ext {
        serenityVersion = '2.3.31'
        serenityCucumberVersion = '2.2.6'
        cucumberVersion = '5.6.0'
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:$rootProject.ext.serenityVersion")
    }
}

apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'

group 'blankFactor.test'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()

}

configurations.all {
    resolutionStrategy {
        force "io.cucumber:cucumber-core:$rootProject.ext.cucumberVersion"
    }
}
dependencies {

    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"

//    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityVersion"

    implementation "net.serenity-bdd:serenity-cucumber5:$rootProject.ext.serenityCucumberVersion"
    implementation "io.cucumber:cucumber-core:$rootProject.ext.cucumberVersion"
    implementation "io.cucumber:cucumber-junit:$rootProject.ext.cucumberVersion"
    implementation "io.cucumber:cucumber-java:$rootProject.ext.cucumberVersion"

    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-rest-assured:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"

    implementation 'co.com.devco.automation:automationDevcoLibrary:1.3.4'

    implementation 'io.appium:java-client:7.6.0'

//    implementation 'org.apache.logging.log4j:log4j-api:2.14.0'
//    implementation 'org.apache.logging.log4j:log4j-core:2.14.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation 'org.assertj:assertj-core:1.7.0'

}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    systemProperties = System.properties as Map<String, ?>
    maxParallelForks = Runtime.runtime.availableProcessors()
}

gradle.startParameter.continueOnFailure = true


